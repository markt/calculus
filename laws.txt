identity add: p + q = p + q
zero power: x ^ 0 = 1
one power: x ^ 1 = x
zeros add: 0 + x = x
zeros add2: x + 0 = x
zeros sub: x - 0 = x
cancel: x - x = 0
factor out constant: p * (q * x) = (p * q) * x
zeros mult: 0 * x = 0
zeros mutl2: x * 0 = 0
one mult: 1 * x = x
one mult2: x * 1 = x
exp add: a ^ (b + c) = a^b * a^c
exp rearrange: (x ^ y) ^ z = x ^ (y * z)
square: (x + y) ^ 2 = x ^ 2 + 2 * x * y + y^2
square const: (p + x) ^ 2 = x ^ 2 + 2 * p * x + p^2
cube: (x + y) ^ 3 = x ^ 3 + 3 * x ^ 2 * y + 3 * x * y ^ 2 + y ^ 3
constant rule: d/dx p = 0
basic: d/dx x = 1
derive x: d/dx p * x = p
product rule: d/dx (a * b) = (d/dx a) * b + a * (d/dx b)
quotient rule: d/dx (a / b) = (d/dx a * b - a * d/dx b) / (b ^ 2)
deriv frac: d/dx (p / q) = 0
power rule const: d/dx x ^ p = p * x ^ (p - 1)
power rule: d/dx x ^ y = y * x ^ (y - 1)
deriv addition: d/dx (a+b) = (d/dx a) + (d/dx b)
deriv subtraction: d/dx (a-b) = (d/dx a) - (d/dx b)
deriv sin: d/dx sin a = cos a * d/dx a
deriv cos: d/dx cos a = (0 - sin a) * d/dx a
derive ln: d/dx ln a = (1/a) * d/dx a